{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "ApplicationName": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "The name of the application."
      }
    },
    "Environment": {
      "type": "string",
      "metadata": {
        "description": "Environment type"
      }
    },
    "Location": {
      "type": "string",
      "defaultValue": "westus2",
      "metadata": {
        "description": "The location of the resource."
      }
    },
    "KeyVaultName": {
      "type": "string",
      "defaultValue": null,
      "metadata": {
        "description": "The name of the key vault."
      }
    },
    "PrimaryRegion": {
      "type": "string",
      "defaultValue": "westus2",
      "metadata": {
        "description": "The primary replica region for the Cosmos DB account."
      }
    },
    "SecondaryRegion": {
      "type": "string",
      "defaultValue": "eastus",
      "metadata": {
        "description": "The secondary replica region for the Cosmos DB account."
      }
    },
    "DefaultConsistencyLevel": {
      "type": "string",
      "defaultValue": "Session",
      "allowedValues": [
        "Eventual",
        "ConsistentPrefix",
        "Session",
        "BoundedStaleness",
        "Strong"
      ],
      "metadata": {
        "description": "The default consistency level of the Cosmos DB account."
      }
    },
    "MaxStalenessPrefix": {
      "type": "int",
      "defaultValue": 100000,
      "minValue": 10,
      "maxValue": 2147483647,
      "metadata": {
        "description": "Max stale requests. Required for BoundedStaleness. Valid ranges, Single Region: 10 to 1000000. Multi Region: 100000 to 1000000."
      }
    },
    "MaxIntervalInSeconds": {
      "type": "int",
      "defaultValue": 300,
      "minValue": 5,
      "maxValue": 86400,
      "metadata": {
        "description": "Max lag time (seconds). Required for BoundedStaleness. Valid ranges, Single Region: 5 to 84600. Multi Region: 300 to 86400."
      }
    },
    "MultipleWriteLocations": {
      "type": "bool",
      "defaultValue": false,
      "allowedValues": [true, false],
      "metadata": {
        "description": "Enable multi-master to make all regions writable."
      }
    },
    "Throughput": {
      "type": "int",
      "defaultValue": 400,
      "minValue": 400,
      "maxValue": 1000000,
      "metadata": {
        "description": "The throughput for the Mongo DB database"
      }
    }
  },
  "variables": {
    "AccountName": "[toLower(concat(parameters('ApplicationName'), '-mongo-', parameters('Environment')))]",
    "DbName": "[toLower(concat(parameters('ApplicationName'), '-', parameters('Environment')))]",
    "FullDbName": "[concat(variables('AccountName'), '/mongodb/', variables('DbName'))]",
    "Locations": [
      {
        "locationName": "[parameters('PrimaryRegion')]",
        "failoverPriority": 0
      },
      {
        "locationName": "[parameters('SecondaryRegion')]",
        "failoverPriority": 1
      }
    ],
    "ConsistencyPolicy": {
      "Eventual": {
        "defaultConsistencyLevel": "Eventual"
      },
      "ConsistentPrefix": {
        "defaultConsistencyLevel": "ConsistentPrefix"
      },
      "Session": {
        "defaultConsistencyLevel": "Session"
      },
      "BoundedStaleness": {
        "defaultConsistencyLevel": "BoundedStaleness",
        "maxStalenessPrefix": "[parameters('MaxStalenessPrefix')]",
        "maxIntervalInSeconds": "[parameters('MaxIntervalInSeconds')]"
      },
      "Strong": {
        "defaultConsistencyLevel": "Strong"
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "name": "[variables('AccountName')]",
      "apiVersion": "2016-03-31",
      "location": "[parameters('Location')]",
      "kind": "MongoDB",
      "tags": {
        "ApplicationName": "[parameters('ApplicationName')]",
        "Environment": "[parameters('Environment')]"
      },
      "properties": {
        "consistencyPolicy": "[variables('ConsistencyPolicy')[parameters('DefaultConsistencyLevel')]]",
        "locations": "[variables('Locations')]",
        "databaseAccountOfferType": "Standard",
        "enableMultipleWriteLocations": "[parameters('MultipleWriteLocations')]"
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/apis/databases",
      "name": "[variables('FullDbName')]",
      "apiVersion": "2016-03-31",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/', variables('AccountName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "resource": {
          "id": "[variables('DbName')]"
        },
        "options": {
          "throughput": "[parameters('Throughput')]"
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(parameters('KeyVaultName'), '/Mongo--ConnectionString')]",
      "apiVersion": "2018-02-14",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('AccountName'))]"
      ],
      "properties": {
        "contentType": "text/plain",
        "value": "[listConnectionStrings(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('AccountName')), '2015-04-08').connectionStrings[0].connectionString]"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(parameters('KeyVaultName'), '/Mongo--DbName')]",
      "apiVersion": "2018-02-14",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/apis/databases', variables('FullDbName'))]"
      ],
      "properties": {
        "contentType": "text/plain",
        "value": "[variables('DbName')]"
      }
    }
  ]
}
